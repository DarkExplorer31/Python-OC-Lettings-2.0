name: OC-Lettings 2.0 CI

on:
  push: 
    branches-ignore:
      - 'none'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Show files after installing dependencies
        run: |
          ls -R

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    needs: build
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        id: tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
        run: |
          pytest -v
          
  code_quality:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    needs: test
    if: ${{ needs.test.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run check code quality
        id: code_quality
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
        run: |
          flake8 .